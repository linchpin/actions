name: Deploy to Pressable

on:
  workflow_call:
    inputs:
      deployment_path:
        description: "Provide if the deployment path is non standard"
        required: false
        default: "/tmp/releases"
        type: string
      deployment_id:
        description: "The deployment ID from previous jobs"
        required: true
        type: string
      workflow_run_id:
        description: "Workflow Run ID to get artifacts from"
        required: true
        type: string
      do_backup:
        description: "Backup the current site before deploying"
        required: false
        default: false
        type: boolean
    secrets:
      pressable_api_client_id:
        description: "Pressable API Client ID"
        required: true
      pressable_api_client_secret:
        description: "Pressable API Client Secret"
        required: true
      site_id:
        description: "Pressable Site ID"
        required: true
      ssh_user:
        description: "SSH User for Pressable Install"
        required: true
      ssh_host:
        description: "SSH Host for Pressable Install"
        required: true
      ssh_key:
        description: "SSH Key for Pressable Install if password isn't being used"
      ssh_pass:
        description: "SSH Password for Pressable Install if key isn't being used"

jobs:
  deploy:
    name: To Pressable
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.env.ENVIRONMENT }}
      url: ${{ github.env.SITE_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Current Version
        id: version
        run: echo "current=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Authenticate Pressable API
        id: authenticate
        run: |
          response=$(curl --location --request POST 'https://my.pressable.com/auth/token' \
          --form 'grant_type="client_credentials"' \
          --form 'client_id="${{ secrets.pressable_api_client_id }}"' \
          --form 'client_secret="${{ secrets.pressable_api_client_secret }}"')
          access_token=$(echo $response | jq -r '.access_token')
          echo "access_token=$access_token" >> $GITHUB_OUTPUT

      - name: Do Backup
        if: ${{ inputs.do_backup == true && steps.authenticate.outputs.access_token }}
        run: |
          curl --location --request GET 'https://my.pressable.com/v1/sites/${{ secrets.site_id }}/ondemand-backups' \
          --header 'Authorization: Bearer ${{ github.env.ACCESS_TOKEN }}' \
          --header 'Content-Type: application/json' \

      - name: Deployment In Progress
        id: in_progress_deployment
        uses: octokit/request-action@v2
        with:
          route: POST /repos/{repo}/deployments/{deployment}/statuses
          repo: ${{ github.repository }}
          deployment: ${{ inputs.deployment_id }}
          environment: ${{ vars.ENVIRONMENT }}
          environment_url: ${{ vars.SITE_URL }}
          log_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          state: in_progress
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Continue Deploy to Pressable
        id: continue_deploy
        if: ${{ inputs.do_backup != true }} # if we are not doing a backup, continue the deployment
        uses: ./.github/workflows/deploy-pressable-continue.yml # continue the deployment process
        with:
          workflow_run_id: ${{ inputs.workflow_run_id }}
          deployment: ${{ inputs.deployment_id }}
