name: Deploy to WP Engine

on:
  workflow_call:
    inputs:
      site_url:
        description: 'The site url we are deploying to (full url)'
        required: true
        type: string
      install_name:
        description: 'The name of the install we are deploying to'
        required: true
        type: string
      environment:
        description: 'The environment we are deploying to (production, staging, dev)'
        required: false
        default: 'staging'
        type: string
      deployment:
        description: 'The deployment ID from previous jobs'
        required: true
        type: string
    secrets:
      deployment_ssh_key:
        description: 'WP Engine SSH Key needed for deployment'
        required: true
        type: string

jobs:
  deploy:
    name: Deployment to WP Engine
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ inputs.site_url }}
    steps:
      - name: Set Deployment Status to In Progress
        id: in_progress_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repo}/deployments/{deployment}/statuses
          repo: ${{ github.repository }}
          deployment: ${{ inputs.deployment }}
          environment: ${{ inputs.environment }}
          environment_url: ${{ inputs.site_url }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: in_progress
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Download All Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./

      - name: Decompress Composer Artifacts
        id: decompress_composer_artifacts
        run: |
          tar -xzf ./artifact/composer.tar.gz -C ./

      - name: Decompress Theme Artifacts
        id: decompress_theme_artifacts
        run: |
          tar -xzf ./artifact/theme-*.tar.gz -C ./build

      - name: Clean Build Files/Folders
        id: clean_build_ff
        run: |
          cd ./build/.deployment
          chmod +x cleanup.sh
          sh cleanup.sh

      - name: Generate release folder name
        id: folder
        run: |
          echo ::set-output name=folder::$(date +'%s')

      - name: Compress the files to be deployed
        id: compression
        run: |
          mv temp_archive ${{ steps.folder.outputs.folder }}
          tar -czf ${{ steps.folder.outputs.folder }}.tar.gz ./${{ steps.folder.outputs.folder }}

      - name: Configure SSH Connection with WP Engine
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/deploy.key
          chmod 600 ~/.ssh/deploy.key
          cat >>~/.ssh/config <<END
          Host wpengine
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/deploy.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ inputs.install_name }}
          SSH_KEY: ${{ secrets.deployment_ssh_key }}
          SSH_HOST: "${{ inputs.install_name }}.ssh.wpengine.net"

      - name: Upload Assets
        id: upload_assets
        run: |
          ssh wpengine "mkdir -p ~/sites/${{ inputs.install_name }}/_wpeprivate/releases"
          rsync --rsh="ssh -v -p 22 -i ${SSH_KEY} -o StrictHostKeyChecking=no" -zrxc --delete "./${{ steps.folder.outputs.folder }}.tar.gz" "~/sites/${{ inputs.install_name }}/_wpeprivate/releases"

      - name: Execute bash scripts on server
        id: execute_bash
        run: |
          ssh wpengine "tar -xf ~/sites/${{ inputs.install_name }}/_wpeprivate/${{ steps.folder.outputs.folder }}.tar.gz"
          ssh wpengine "cd ${{ steps.folder.outputs.folder }}/.deployment"
          ssh wpengine "chmod +x entrypoint.sh && sh ./entrypoint.sh"
          
      - name: Deploy Cleanup
        run: |
          ssh wpengine "rm -rf ~/sites/${{ inputs.install_name }}/_wpeprivate/releases/${{ steps.folder.outputs.folder }}/.deployment"
          ssh wpengine "rm -rf ~/sites/${{ inputs.install_name }}/_wpeprivate/releases/${{ steps.folder.outputs.folder }}.tar.gz

      - name: Clear Cache
        if: ${{ always() }}
        run: ssh wpengine 'wp cache flush && wp page-cache flush'

      - name: Set Deployment Status as Successful
        if: ${{ success() }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repo}/deployments/{deployment}/statuses
          repo: ${{ github.repository }}
          deployment: ${{ inputs.deployment }}
          environment: ${{ inputs.environment }}
          environment_url: ${{ inputs.site_url }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: success
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Set Deployment Status as Failboat
        if: ${{ failure() }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repo}/deployments/{deployment}/statuses
          repo: ${{ github.repository }}
          deployment: ${{ inputs.deployment }}
          environment: ${{ inputs.environment }}
          environment_url: ${{ needs.preflight.outputs.site_url }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: failure
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
