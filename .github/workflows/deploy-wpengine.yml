name: Deploy to WP Engine

on:
  workflow_call:
    inputs:
      install_name:
        description: 'The name of the install on WP Engine we are deploying to'
        required: true
        type: string
      site_url:
        description: 'The site url we are deploying to (full url)'
        required: true
        type: string
      environment:
        description: 'The environment we are deploying to (production, staging, dev)'
        required: false
        default: 'staging'
        type: string
      branch:
        description: 'The branch we are deploying to'
        required: false
        default: 'staging'
        type: string
      deployment:
        description: 'The deployment ID from previous jobs'
        required: true
        type: string
      deployment_path:
        description: 'Provide if the deployment path is non standard'
        required: false
        default: '_wpeprivate/releases'
        type: string
      workflow_run_id:
        description: 'Workflow Run ID to get artifacts from'
        required: true
        type: string
    secrets:
      deployment_ssh_key:
        description: 'WP Engine SSH Key needed for deployment'
        required: true
      gh_bot_token:
        description: 'Bot Access to Private repo'
        required: true

jobs:
  deploy:
    name: To WP Engine
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ inputs.site_url }}
    steps:
      - name: Deployment In Progress
        id: in_progress_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repo}/deployments/{deployment}/statuses
          repo: ${{ github.repository }}
          deployment: ${{ inputs.deployment }}
          environment: ${{ inputs.environment }}
          environment_url: ${{ inputs.site_url }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: in_progress
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Download All Artifacts
        uses: actions/download-artifact@v2
        id: download
        with:
          name: 'release'
          path: ./

      - name: Generate release zip
        id: folder
        run: |
          echo ::set-output name=folder::$(date +'%s')

      - name: Configure SSH Connection with WP Engine
        run: |
          SSH_PATH="$HOME/.ssh"
          KNOWN_HOSTS_PATH="$SSH_PATH/known_hosts"
          SSH_KEY_PRIVATE_PATH="$SSH_PATH/github_action"
          mkdir -p "$SSH_PATH"
          ssh-keyscan -t rsa "$SSH_HOST" >> "$KNOWN_HOSTS_PATH"
          # Copy Secret Keys to container
          echo "$SSH_KEY" > "$SSH_KEY_PRIVATE_PATH"
          
          chmod 700 "$SSH_PATH"
          chmod 644 "$KNOWN_HOSTS_PATH"
          chmod 600 "$SSH_KEY_PRIVATE_PATH"

          cat >>~/.ssh/config <<END
          Host wpengine
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile $SSH_KEY_PRIVATE_PATH
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ inputs.install_name }}
          SSH_KEY: ${{ secrets.deployment_ssh_key }}
          SSH_HOST: "${{ inputs.install_name }}.ssh.wpengine.net"

      - name: Upload Assets
        id: upload_assets
        run: |
          SSH_PATH="$HOME/.ssh"
          KNOWN_HOSTS_PATH="$SSH_PATH/known_hosts"
          SSH_KEY_PRIVATE_PATH="$SSH_PATH/github_action"
          mv ./release.zip ./${{ steps.folder.outputs.folder }}.zip
          ssh wpengine "mkdir -p ~/sites/${{ inputs.install_name }}/${{ inputs.deployment_path }}"
          rsync --rsh="ssh -p 22 -i $SSH_KEY_PRIVATE_PATH -o StrictHostKeyChecking=no" -xc --progress "${{ steps.folder.outputs.folder }}.zip" "${{ inputs.install_name }}@${{ inputs.install_name }}.ssh.wpengine.net:~/sites/${{ inputs.install_name }}/${{ inputs.deployment_path }}"

      - name: Execute bash scripts on server
        id: execute_bash
        run: |
          ssh wpengine "unzip -o ~/sites/${{ inputs.install_name }}/${{ inputs.deployment_path }}/${{ steps.folder.outputs.folder }}.zip -d ~/sites/${{ inputs.install_name }}/${{ inputs.deployment_path }}"
          ssh wpengine "mkdir -p ~/sites/${{ inputs.install_name }}/${{ inputs.deployment_path }}/release/.deployment/"
          ssh wpengine "cd ~/sites/${{ inputs.install_name }}/${{ inputs.deployment_path }}/release/.deployment/ && wget -O entrypoint.sh https://raw.githubusercontent.com/linchpin/actions/main/.deployment/wpengine-entrypoint.sh && chmod +x ./entrypoint.sh && sh ./entrypoint.sh"

      - name: Clear Page and Object Cache
        if: ${{ always() }}
        run: |
          ssh wpengine "cd ~/sites/${{ inputs.install_name }} && wp cache flush && wp page-cache flush"

      - name: Set Deployment Status as Successful
        if: ${{ success() }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repo}/deployments/{deployment}/statuses
          repo: ${{ github.repository }}
          deployment: ${{ inputs.deployment }}
          environment: ${{ inputs.environment }}
          environment_url: ${{ inputs.site_url }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: success
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Set Deployment Status as Failboat
        if: ${{ failure() }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repo}/deployments/{deployment}/statuses
          repo: ${{ github.repository }}
          deployment: ${{ inputs.deployment }}
          environment: ${{ inputs.environment }}
          environment_url: ${{ needs.preflight.outputs.site_url }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: failure
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
