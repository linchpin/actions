name: Deploy WordPress Site

# This is the base deployment workflow that is called by other Workflows

on:
  workflow_call:
    inputs:
      skip_lint:
        description: "Skip the linting process"
        required: false
        default: false
        type: boolean
      do_backup:
        description: "Backup the current site before deploying"
        required: false
        default: true
        type: boolean
      environment:
        description: "The environment to deploy to"
        required: true
        type: string
        default: "staging"

jobs:
  preflight:
    name: Preflight Setup
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    outputs:
      gh_deployment_id: ${{ steps.gh_deployment_data.outputs.id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Deployments for Environment
        id: get_deployments
        uses: octokit/request-action@v2.4.0
        with:
          route: GET /repos/{repo}/deployments?environment=${{ inputs.environment }}&per_page=1
          repo: ${{ github.repository }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Get Latest Deployment Status for Environment
        id: get_deployment_status
        uses: octokit/request-action@v2.4.0
        with:
          route: GET /repos/{repo}/deployments/${{ fromJson( steps.get_deployments.outputs.data )[0].id }}/statuses
          repo: ${{ github.repository }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Cancel Existing Deployment
        if: ${{ fromJson( steps.get_deployments.outputs.data )[0].id != '' && fromJson( steps.get_deployment_status.outputs.data )[0].state != 'success' }}
        id: cancel_deployment
        uses: octokit/request-action@v2.4.0
        with:
          route: POST /repos/{repo}/deployments/${{ fromJson( steps.get_deployments.outputs.data )[0].id }}/statuses
          repo: ${{ github.repository }}
          state: inactive
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      # This creates a "deployment" in GitHub, this helps track the progress
      # of the deployment in the GitHub UI, it is purely for visual purposes
      # and does not technically impact the "deployment" of the code.
      - name: Create Deployment
        id: create_deployment
        uses: octokit/request-action@v2.4.0
        with:
          route: POST /repos/{repo}/deployments
          repo: ${{ github.repository }}
          ref: ${{ vars.BRANCH }}
          environment: ${{ vars.ENVIRONMENT }}
          required_contexts: "[]" # This allows for the deployment to run within all contexts passing
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      # Stores the deployment ID so it can be referenced by other workflows, jobs and steps
      # We use this to update the deployment status as we progress through the deployment.
      - name: GitHub Deployment Data
        id: gh_deployment_data
        run: |
          echo "id=${{ fromJson( steps.create_deployment.outputs.data ).id }}" >> $GITHUB_OUTPUT

      - name: Set Deployment Status to Pending
        id: start_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repo}/deployments/:deployment/statuses
          repo: ${{ github.repository }}
          deployment: ${{ steps.gh_deployment_data.outputs.id }}
          environment: ${{ vars.ENVIRONMENT }}
          environment_url: ${{ vars.SITE_URL }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: pending
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  lint:
    needs: [preflight]
    if: ${{ inputs.skip_lint != true }}
    name: Lint Release
    uses: ./.github/workflows/phplint.yml
    secrets: inherit
    with:
      php_version: ${{ vars.PHP_VERSION }}

  build:
    needs: [preflight, lint]
    name: Build Project
    secrets: inherit
    uses: ./.github/workflows/build.yml

  var_output:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    name: Var Output
    steps:
      - name: Var Output
        run: |
          echo "${{ vars.HOST }}"
          echo "PHP Version: ${{ vars.PHP_VERSION }}"

  deploy:
    needs: [build]
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host: [pressable, wpengine, cloudways]
    if: ${{ vars.HOST == matrix.host }}
    uses: ./.github/workflows/deploy-${{ matrix.host }}.yml
    secrets: inherit
    with:
      deployment_id: ${{ needs.preflight.outputs.gh_deployment_id }}
      workflow_run_id: ${{ github.run_id }}
      do_backup: ${{ inputs.do_backup }}

  deploy_finish:
    name: Complete Deployment
    runs-on: ubuntu-latest
    environment:
      name: ${{ vars.ENVIRONMENT }}
      url: ${{ vars.SITE_URL }}
    if: ${{ always() && needs.preflight.outputs.gh_deployment_id != '' }} # No matter if the needs are met still finish. Could be success or fail
    needs:
      [preflight, build, deploy]
    steps:
      - name: Set Deployment Status as Successful
        if: ${{ success() && ! inputs.do_backup && needs.preflight.outputs.gh_deployment_id != '' }} # if we are not doing a backup, continue the deployment, otherwise wait for the backup to finish
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repo}/deployments/{deployment}/statuses
          repo: ${{ github.repository }}
          deployment: ${{ needs.preflight.outputs.gh_deployment_id }}
          environment: ${{ vars.ENVIRONMENT }}
          environment_url: ${{ vars.SITE_URL }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: success
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Set Deployment Status as Failboat
        if: ${{ failure() || needs.preflight.outputs.gh_deployment_id == '' }} # if the deployment failed or the deployment ID is not set, mark the deployment as failed
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repo}/deployments/{deployment}/statuses
          repo: ${{ github.repository }}
          deployment: ${{ needs.preflight.outputs.gh_deployment_id }}
          environment: ${{ vars.ENVIRONMENT }}
          environment_url: ${{ vars.SITE_URL }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: failure
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
